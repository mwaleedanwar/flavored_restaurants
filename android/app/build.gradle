def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'

android {
    signingConfigs {
        configNopal {
            keyAlias 'nopaldose'
            keyPassword '12345678'
            storeFile file('C:/Users/AhmadRaza/NopalDose.jks')
            storePassword '12345678'
        }
        configMaa {
            keyAlias 'maakitchen'
            keyPassword 'FastTech@123'
            storeFile file('C:/Users/AhmadRaza/MaaKitchen.jks')
            storePassword 'FastTech@123'
        }
        configHcb {
            keyAlias 'chinabox'
            keyPassword 'FastTech@123'
            storeFile file('C:/Users/AhmadRaza/ChinaBox.jks')
            storePassword 'FastTech@123'
        }
        configApnaa {
            keyAlias 'apnaabazaarrest'
            keyPassword 'FastTech@123'
            storeFile file('C:/Users/AhmadRaza/ApnaaBazaarRest.jks')
            storePassword 'FastTech@123'
        }
        configChaatHouse {
            keyAlias 'chaathouse'
            keyPassword 'FastTech@123'
            storeFile file('C:/Users/AhmadRaza/ChaatHouse.jks')
            storePassword 'FastTech@123'
        }
        configKabsah {
            keyAlias 'kabsahapp'
            keyPassword '12345678'
            storeFile file('C:/Users/AhmadRaza/kabsahapp.jks')
            storePassword '12345678'
        }
        configFifthE {
            keyAlias '5thelement'
            keyPassword 'FastTech@123'
            storeFile file('C:/Users/AhmadRaza/5thElement.jks')
            storePassword 'FastTech@123'
        }
        configAlladinGrill {
            keyAlias 'aladdingrill'
            keyPassword 'FastTech@123'
            storeFile file('C:/Users/AhmadRaza/AladdinGrill.jks')
            storePassword 'FastTech@123'
        }
        configJaxspice {
            keyAlias 'jaxspice'
            keyPassword 'FastTech@123'
            storeFile file('C:/Users/AhmadRaza/jaxspice.jks')
            storePassword 'FastTech@123'
        }
        configAfgrill {
            keyAlias 'anfg'
            keyPassword 'FastTech@123'
            storeFile file('C:/Users/AhmadRaza/ANFG.jks')
            storePassword 'FastTech@123'
        }
        configSanto {
            keyAlias '' //add alias here
            keyPassword '' //password
            storeFile file('C:/Users/AhmadRaza/<FILE_NAME>.jks') //replace <FILE_NAME>
            storePassword '' //password
        }
        configWillyb {
            keyAlias '' //add alias here
            keyPassword '' //password
            storeFile file('C:/Users/AhmadRaza/<FILE_NAME>.jks') //replace <FILE_NAME>
            storePassword '' //password
        }
    }

    flavorDimensions "flavor-type"

    productFlavors {
        nopal {
            dimension "flavor-type"
            applicationId "com.nopal.app"
            resValue "string", "app_name", "Nopal Dos"
            signingConfig signingConfigs.configNopal
        }
        maa {
            dimension "flavor-type"
            applicationId "com.fasttech.maakitchen"
            resValue "string", "app_name", "Maa Kitchen"
            signingConfig signingConfigs.configMaa
        }
        santo {
            dimension "flavor-type"
            applicationId "com.fasttech.cafesantorini"
            resValue "string", "app_name", "Cafe Santorini"
            signingConfig signingConfigs.configSanto
        }
        hcb {
            dimension "flavor-type"
            applicationId "com.halalchinabox.app"
            resValue "string", "app_name", "Halal China Box"
            signingConfig signingConfigs.configHcb
        }
        apnaa {
            dimension "flavor-type"
            applicationId "com.fasttechapnabazar.app"
            resValue "string", "app_name", "Apnaa Bazar"
            signingConfig signingConfigs.configApnaa
        }
        willyb {
            dimension "flavor-type"
            applicationId "com.willybsteakhouse.fasttech"
            resValue "string", "app_name", "Steakhouse"
            signingConfig signingConfigs.configWillyb
        }
        chaatHouse {
            dimension "flavor-type"
            applicationId "com.chaathouse.app"
            resValue "string", "app_name", "Chaat House"
            signingConfig signingConfigs.configChaatHouse
        }
        kabsah {
            dimension "flavor-type"
            applicationId "com.scalecafe.app"
            resValue "string", "app_name", "kabsah"
            signingConfig signingConfigs.configKabsah
        }
        fifthE {
            dimension "flavor-type"
            applicationId "com.element5th.app"
            resValue "string", "app_name", "5th Element"
            signingConfig signingConfigs.configFifthE
        }
        alladinGrill {
            dimension "flavor-type"
            applicationId "com.alladingrill.app"
            resValue "string", "app_name", "Aladdin Grill"
            signingConfig signingConfigs.configAlladinGrill
        }
        jaxspice {
            dimension "flavor-type"
            applicationId "com.jaxspice.com"
            resValue "string", "app_name", "jaxSpice"
            signingConfig signingConfigs.configJaxspice
        }
        afgrill {
            dimension "flavor-type"
            applicationId "com.fasttech.eatatanfgyros"
            resValue "string", "app_name", "ANF Gyros Grill"
            signingConfig signingConfigs.configAfgrill
        }
    }

    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    
    buildTypes {
        release {
            crunchPngs false
            minifyEnabled true
            shrinkResources true
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.google.firebase:firebase-messaging:21.0.1"
}
